name: Terraform Deploy with OPA Policy Check

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform OPA Controlled Deployment
    runs-on: ubuntu-latest

    env: # Define common environment variables for the entire job here
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: terraform init
        # No need for specific env block here if defined at job level

      - name: Terraform Plan
        run: |
          terraform plan -out=tfplan.binary \
            -var="client_id=${{ secrets.AZURE_CLIENT_ID }}" \
            -var="client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" \
            -var="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            -var="tenant_id=${{ secrets.AZURE_TENANT_ID }}"

      - name: Convert Terraform Plan to JSON
        run: |
          terraform show -json tfplan.binary > tfplan.json

      - name: "Debug: Print tfplan.json Content"
        run: |
          echo "--- tfplan.json content ---"
          cat tfplan.json
          echo "--------------------------"

      - name: Install OPA
        run: |
          # Download OPA to a temporary file name, e.g., 'opa-temp'
          curl -L -o opa-temp https://openpolicyagent.org/downloads/latest/opa_linux_amd64
          # Make it executable
          chmod +x opa-temp
          # Move it to /usr/local/bin and rename it to 'opa'
          sudo mv opa-temp /usr/local/bin/opa

      - name: Evaluate OPA Policy
        id: opa_check
        run: |
          result=$(opa eval --input tfplan.json --data ./opa 'data.azure.policy.allow' --format=json)
          echo "$result"
          allowed=$(echo "$result" | jq -r '.result[0].expressions[0].value')
          echo "Policy allowed: $allowed"
          echo "allowed=$allowed" >> $GITHUB_OUTPUT

      - name: Terraform Apply
        if: steps.opa_check.outputs.allowed == 'true'
        run: terraform apply -auto-approve tfplan.binary
        # No need for specific env block here if defined at job level